{"version":3,"sources":["b-header.js","b-sliders.js","c-tooltips.js","d-calc.js","d-togglers.js","01_main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../components/main.min.js","sourcesContent":["let burger = document.querySelector(\".burger\")\r\nlet body = document.querySelector(\"body\")\r\nlet header = document.querySelector(\".header\")\r\n\r\nif (burger) {\r\n    burger.onclick = function() {\r\n        header.classList.toggle(\"_open\")\r\n        body.classList.toggle(\"fixed-body\")\r\n    }\r\n}\r\n\r\n\r\n","function Sliders() {\r\n    let SlidersArray = []\r\n\r\n    let sliders = document.querySelectorAll(\".slider\")\r\n    sliders.forEach((slider,index) => {\r\n        slider.setAttribute(\"data-slider-id\",index)\r\n\r\n        SlidersArray[index] = new Swiper(`.slider[data-slider-id=\"${index}\"] .swiper-container`, {\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 0,\r\n            // loop: true,\r\n            watchSlidesProgress: true,\r\n            preventClicks :true,\r\n            a11y: false,\r\n            navigation: {\r\n                nextEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-next`,\r\n                prevEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-prev`,\r\n            },\r\n            pagination: {\r\n                el: `.slider[data-slider-id=\"${index}\"] .swiper-pagination`,\r\n                type: 'bullets',\r\n                clickable: true,\r\n            },\r\n        })\r\n    })\r\n}\r\n\r\nSliders()\r\n","let hintBlocks = document.querySelectorAll(\".hint-block\")\r\n\r\nhintBlocks.forEach(block => {\r\n    block.onmouseover = () => {\r\n        block.classList.add(\"_active\")\r\n    }\r\n    block.onmouseleave = () => {\r\n        block.classList.remove(\"_active\")\r\n    }\r\n    block.onclick = () => {\r\n        block.classList.add(\"_active\")\r\n    }\r\n    document.addEventListener( 'click', (e) => {\r\n        const withinBoundaries = e.composedPath().includes(block);\r\n\r\n        if ( ! withinBoundaries ) {\r\n            if(block.classList.contains(\"_active\")){\r\n                block.classList.remove(\"_active\")\r\n            }\r\n        }\r\n    })\r\n})\r\n","let rangeBlocks = document.querySelectorAll(\"._range-block\")\r\n\r\nrangeBlocks.forEach(rangeBlock => {\r\n    let rangeSlider = rangeBlock.querySelector(\".range-slider\")\r\n    let rangeOutput = rangeBlock.querySelector(\".calc-item__output-num\")\r\n    let min = +rangeBlock.querySelector(\"._min\").innerHTML\r\n    let max = +rangeBlock.querySelector(\"._max\").innerHTML\r\n    let name = rangeBlock.getAttribute(\"data-name\")\r\n\r\n    if (rangeSlider) {\r\n        noUiSlider.create(rangeSlider, {\r\n            start: min,\r\n            connect: [true, false],\r\n            step: 1,\r\n            range: {\r\n                'min': min,\r\n                'max': max\r\n            }\r\n        });\r\n\r\n        rangeSlider.noUiSlider.on('update', function (values, handle) {\r\n            rangeOutput.value = Math.floor(values[handle]);\r\n        });\r\n\r\n        rangeSlider.noUiSlider.on('start', function (values, handle) {\r\n            getResult()\r\n            if(name === \"_productive-cluster\"){\r\n                document.querySelector(\"[data-name='_standard-cluster']\").querySelector(\".range-slider\").noUiSlider.set(0)\r\n            }\r\n            if(name === \"_standard-cluster\"){\r\n                if(document.querySelector(\"[data-name='_productive-cluster']\").querySelector(\".range-slider\").noUiSlider){\r\n                    document.querySelector(\"[data-name='_productive-cluster']\").querySelector(\".range-slider\").noUiSlider.set(0)\r\n                }\r\n            }\r\n        });\r\n\r\n        rangeOutput.addEventListener('change', (e) => {\r\n            rangeSlider.noUiSlider.set(e.target.value)\r\n            getResult()\r\n        })\r\n\r\n        rangeSlider.noUiSlider.on('slide', function (values, handle) {\r\n            getResult()\r\n        });\r\n    }\r\n})\r\n\r\ngetResult()\r\n\r\n\r\nlet backupCheckbox = document.querySelectorAll(\"input[name='backup']\")\r\n\r\nbackupCheckbox.forEach(checkbox => {\r\n    if(checkbox.checked){\r\n        getResult()\r\n    }\r\n\r\n    checkbox.onchange = ()=> getResult()\r\n})\r\n\r\nfunction getResult() {\r\n    let result = 0\r\n    let virtualDataCenterFields = document.querySelectorAll(\".calc-group__items ._range-block\")\r\n\r\n\r\n\r\n    virtualDataCenterFields.forEach(field => {\r\n        let rangeOutput = +field.querySelector(\".calc-item__output-num\").value\r\n        let price = +field.getAttribute(\"data-price\")\r\n\r\n        result += (price*rangeOutput)\r\n    })\r\n\r\n\r\n\r\n    let checkboxes = document.querySelectorAll(\"input[name='backup']\")\r\n    checkboxes.forEach((checkbox,index) => {\r\n        if(checkbox.checked){\r\n            let backUpGroup = checkbox.closest(\".backup-group\")\r\n            let parentBlock = backUpGroup.querySelector(\".calc-item\")\r\n\r\n            let rangeOutput = +parentBlock.querySelector(\".calc-item__output-num\").value\r\n            let price = +parentBlock.getAttribute(\"data-price\")\r\n\r\n            result += (price*rangeOutput)\r\n            console.log(backUpGroup.classList.contains(\"_advanced\"))\r\n            if(backUpGroup.classList.contains(\"_advanced\")){\r\n                let virtualMachineField = backUpGroup.querySelector(\".ccalc input\")\r\n                let price = +virtualMachineField.getAttribute(\"data-price\")\r\n                let count = +virtualMachineField.value\r\n\r\n                console.log(count)\r\n                console.log(price)\r\n\r\n                result += (price * count)\r\n            }\r\n        }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    outputResult(result)\r\n\r\n\r\n}\r\n\r\nfunction outputResult(result){\r\n    let resultHtml = document.querySelector(\"._result\")\r\n    resultHtml.innerHTML = result.toLocaleString()\r\n}\r\n\r\n\r\n\r\nlet calculators = document.querySelectorAll(\".ccalc\")\r\n\r\ncalculators.forEach(calc => {\r\n    let minusBtn = calc.querySelector(\"._minus\")\r\n    let plusBtn = calc.querySelector(\"._plus\")\r\n    let input = calc.querySelector(\"input\")\r\n\r\n    plusBtn.onclick = ()=>{\r\n        if(plusBtn.closest(\".catalog-card\")){\r\n            openModal(document.querySelector(\"#additiveModal\"))\r\n        }\r\n        input.value = +input.value + 1\r\n        calc.classList.add(\"_added\")\r\n        getResult()\r\n    }\r\n    minusBtn.onclick = ()=>{\r\n        if(+input.value === 1){\r\n            return\r\n        }\r\n        input.value = +input.value - 1\r\n        getResult()\r\n    }\r\n})\r\n\r\n\r\nfunction clickRadio(param) {\r\n    var value = document.querySelectorAll(\"input[type='radio'][name='\" + param.name + \"']\");\r\n    for (var i = 0; i < value.length; i++) {\r\n        if (value[i] != param)\r\n            value[i].BeforeCheck = false;\r\n    }\r\n\r\n    if (param.BeforeCheck)\r\n        param.checked = false;\r\n    param.BeforeCheck = param.checked;\r\n    getResult()\r\n}\r\n","let toggleBlocks = document.querySelectorAll(\".slideToggle-block\")\r\ntoggleBlocks.forEach((el, i) => {\r\n    el.setAttribute(\"data-id\", i + 1)\r\n    let id = el.getAttribute(\"data-id\")\r\n    let toggleElement = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__show`)\r\n    let animatedBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden`)\r\n    let contentBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)\r\n    let contentBlockHeight = contentBlock.getBoundingClientRect().height\r\n    toggleElement.onclick = function() {\r\n        if (el.classList.contains(\"slideToggle-block--active\")) {\r\n            el.classList.remove(\"slideToggle-block--active\")\r\n            animatedBlock.style.height = `0px`\r\n        } else {\r\n            el.classList.add(\"slideToggle-block--active\")\r\n            animatedBlock.style.height = `${contentBlockHeight}px`\r\n            setToggleBlocksHeight()\r\n        }\r\n    }\r\n});\r\n\r\nwindow.onresize = function() {\r\n    setToggleBlocksHeight()\r\n}\r\n\r\nsetToggleBlocksHeight()\r\n\r\nfunction setToggleBlocksHeight() {\r\n    if(toggleBlocks.length===0){\r\n        return\r\n    }\r\n    let activeToggleBlocks = document.querySelectorAll(\".slideToggle-block--active\")\r\n\r\n    activeToggleBlocks.forEach(el => {\r\n        let id = el.getAttribute(\"data-id\")\r\n        let animatedBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden`)\r\n        let contentBlock = document.querySelector(`[data-id=\"${id}\"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)\r\n        let contentBlockHeight = contentBlock.getBoundingClientRect().height\r\n        animatedBlock.style.height = `${contentBlockHeight}px`\r\n    });\r\n}\r\n","window.addEventListener('DOMContentLoaded', () => {\r\n    fix100vh();\r\n    window.addEventListener('resize', () => {\r\n        fix100vh();\r\n        // getScrollBarSize()\r\n    })\r\n\r\n    // getScrollBarSize()\r\n})\r\n\r\nfunction fix100vh() {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n}\r\n"]}