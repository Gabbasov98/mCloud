let burger = document.querySelector(".burger")
let body = document.querySelector("body")
let header = document.querySelector(".header")

if (burger) {
    burger.onclick = function() {
        header.classList.toggle("_open")
        body.classList.toggle("fixed-body")
    }
}



function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            // loop: true,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

Sliders()

let hintBlocks = document.querySelectorAll(".hint-block")

hintBlocks.forEach(block => {
    block.onmouseover = () => {
        block.classList.add("_active")
    }
    block.onmouseleave = () => {
        block.classList.remove("_active")
    }
    block.onclick = () => {
        block.classList.add("_active")
    }
    document.addEventListener( 'click', (e) => {
        const withinBoundaries = e.composedPath().includes(block);

        if ( ! withinBoundaries ) {
            if(block.classList.contains("_active")){
                block.classList.remove("_active")
            }
        }
    })
})

let rangeBlocks = document.querySelectorAll("._range-block")

rangeBlocks.forEach(rangeBlock => {
    let rangeSlider = rangeBlock.querySelector(".range-slider")
    let rangeOutput = rangeBlock.querySelector(".calc-item__output-num")
    let min = +rangeBlock.querySelector("._min").innerHTML
    let max = +rangeBlock.querySelector("._max").innerHTML
    let name = rangeBlock.getAttribute("data-name")

    if (rangeSlider) {
        noUiSlider.create(rangeSlider, {
            start: min,
            connect: [true, false],
            step: 1,
            range: {
                'min': min,
                'max': max
            }
        });

        rangeSlider.noUiSlider.on('update', function (values, handle) {
            rangeOutput.innerHTML = Math.floor(values[handle]);
        });

        rangeSlider.noUiSlider.on('start', function (values, handle) {
            getResult()
            if(name === "_productive-cluster"){
                document.querySelector("[data-name='_standard-cluster']").querySelector(".range-slider").noUiSlider.set(0)
            }
            if(name === "_standard-cluster"){
                if(document.querySelector("[data-name='_productive-cluster']").querySelector(".range-slider").noUiSlider){
                    document.querySelector("[data-name='_productive-cluster']").querySelector(".range-slider").noUiSlider.set(0)
                }
            }
        });

        rangeSlider.noUiSlider.on('slide', function (values, handle) {
            getResult()
        });
    }
})

getResult()


let backupCheckbox = document.querySelectorAll("input[name='backup']")

backupCheckbox.forEach(checkbox => {
    if(checkbox.checked){
        getResult()
    }

    checkbox.onchange = ()=> getResult()
})

function getResult() {
    let result = 0
    let virtualDataCenterFields = document.querySelectorAll(".calc-group__items ._range-block")



    virtualDataCenterFields.forEach(field => {
        let rangeOutput = +field.querySelector(".calc-item__output-num").innerHTML
        let price = +field.getAttribute("data-price")

        result += (price*rangeOutput)
    })



    let checkbox = document.querySelector("input[name='backup']:checked")
    let backUpGroup = checkbox.closest(".backup-group")
    let parentBlock = backUpGroup.querySelector(".calc-item")

    let rangeOutput = +parentBlock.querySelector(".calc-item__output-num").innerHTML
    let price = +parentBlock.getAttribute("data-price")

    result += (price*rangeOutput)
    if(backUpGroup.classList.contains("_advanced")){
        let virtualMachineField = backUpGroup.querySelector(".ccalc input")
        let price = +virtualMachineField.getAttribute("data-price")
        let count = +virtualMachineField.value

        result += (price * count)
    }

    outputResult(result)


}

function outputResult(result){
    let resultHtml = document.querySelector("._result")
    resultHtml.innerHTML = result.toLocaleString()
}



let calculators = document.querySelectorAll(".ccalc")

calculators.forEach(calc => {
    let minusBtn = calc.querySelector("._minus")
    let plusBtn = calc.querySelector("._plus")
    let input = calc.querySelector("input")

    plusBtn.onclick = ()=>{
        if(plusBtn.closest(".catalog-card")){
            openModal(document.querySelector("#additiveModal"))
        }
        input.value = +input.value + 1
        calc.classList.add("_added")
    }
    minusBtn.onclick = ()=>{
        if(+input.value === 1){
            return
        }
        input.value = +input.value - 1
    }
})

let toggleBlocks = document.querySelectorAll(".slideToggle-block")
toggleBlocks.forEach((el, i) => {
    el.setAttribute("data-id", i + 1)
    let id = el.getAttribute("data-id")
    let toggleElement = document.querySelector(`[data-id="${id}"] > .slideToggle-block__show`)
    let animatedBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden`)
    let contentBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)
    let contentBlockHeight = contentBlock.getBoundingClientRect().height
    toggleElement.onclick = function() {
        if (el.classList.contains("slideToggle-block--active")) {
            el.classList.remove("slideToggle-block--active")
            animatedBlock.style.height = `0px`
        } else {
            el.classList.add("slideToggle-block--active")
            animatedBlock.style.height = `${contentBlockHeight}px`
            setToggleBlocksHeight()
        }
    }
});

window.onresize = function() {
    setToggleBlocksHeight()
}

setToggleBlocksHeight()

function setToggleBlocksHeight() {
    if(toggleBlocks.length===0){
        return
    }
    let activeToggleBlocks = document.querySelectorAll(".slideToggle-block--active")

    activeToggleBlocks.forEach(el => {
        let id = el.getAttribute("data-id")
        let animatedBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden`)
        let contentBlock = document.querySelector(`[data-id="${id}"] > .slideToggle-block__hidden > .slideToggle-block__wrap`)
        let contentBlockHeight = contentBlock.getBoundingClientRect().height
        animatedBlock.style.height = `${contentBlockHeight}px`
    });
}

window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        // getScrollBarSize()
    })

    // getScrollBarSize()
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
