let burger = document.querySelector(".burger")
let body = document.querySelector("body")
let header = document.querySelector(".header")

if (burger) {
    burger.onclick = function() {
        header.classList.toggle("_open")
        body.classList.toggle("fixed-body")
    }
}



function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            // loop: true,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

Sliders()

let hintBlocks = document.querySelectorAll(".hint-block")

hintBlocks.forEach(block => {
    block.onmouseover = () => {
        block.classList.add("_active")
    }
    block.onmouseleave = () => {
        block.classList.remove("_active")
    }
    block.onclick = () => {
        block.classList.add("_active")
    }
    document.addEventListener( 'click', (e) => {
        const withinBoundaries = e.composedPath().includes(block);

        if ( ! withinBoundaries ) {
            if(block.classList.contains("_active")){
                block.classList.remove("_active")
            }
        }
    })
})

let rangeBlocks = document.querySelectorAll("._range-block")

rangeBlocks.forEach(rangeBlock => {
    let rangeSlider = rangeBlock.querySelector(".range-slider")
    let rangeOutput = rangeBlock.querySelector(".calc-item__output-num")
    let min = +rangeBlock.getAttribute("data-min")
    let max = +rangeBlock.getAttribute("data-max")
    console.log(min)
    console.log(max)

    if (rangeSlider) {
        noUiSlider.create(rangeSlider, {
            start: 10,
            connect: [true, false],
            step: 1,
            range: {
                'min': min,
                'max': max
            }
        });

        rangeSlider.noUiSlider.on('update', function (values, handle) {
            rangeOutput.innerHTML = Math.floor(values[handle]);
        });
    }
})



window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        // getScrollBarSize()
    })

    // getScrollBarSize()
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
